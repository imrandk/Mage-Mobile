// Function to click a button periodically
function clickButtonPeriodically(callback) {
  const button = document.getElementById('ZQvTCDIoXyggqlOiDvupbb');
  if (button) {
    if (typeof button.click === 'function') button.click();
    else button.dispatchEvent(new Event('click'));
    setTimeout(callback, 5000);
  } else setTimeout(() => clickButtonPeriodically(callback), 5000);
}

// Function to continuously search for a button element until found and click it
function searchAndClickButton(selector, callback) {
  const interval = setInterval(() => {
    const button = document.querySelector(selector);
    if (button) {
      button.click();
      clearInterval(interval);
      callback();
    }
  }, 1000);
}

// Function to check for the presence of an element containing specific text
function checkElement(selector, text, callback) {
  const interval = setInterval(() => {
    const elements = document.querySelectorAll(selector);
    for (const element of elements) {
      if (element.textContent.trim() === text) {
        clearInterval(interval);
        callback(element);
        return;
      }
    }
  }, 100);
}

// Function to continuously search for a button element until found and click it
function searchAndClickButtonWithSVG(svgSelector, callback) {
  const interval = setInterval(() => {
    const svgElement = document.querySelector(svgSelector);
    if (svgElement) {
      const button = svgElement.closest('button');
      if (button) {
        button.click();
        clearInterval(interval);
        callback();
      }
    }
  }, 1000);
}

// Define the order in which the code segments will be executed
const codeSegments = [
  () => clickButtonPeriodically(segmentDone),
  () => searchAndClickButton('.mantine-UnstyledButton-root.mantine-Button-root.mantine-1vxfzrq', segmentDone),
  () => searchAndClickButton('.mantine-UnstyledButton-root.mantine-Button-root.mantine-fqua6i', segmentDone),
  () => checkElement('.mantine-Text-root.mantine-jeknur', 'Enhancer', segmentDone),
  () => searchAndClickButtonWithSVG('svg.icon-tabler-repeat', segmentDone)
];

let currentSegmentIndex = 0;

function segmentDone() {
  currentSegmentIndex++;
  if (currentSegmentIndex >= codeSegments.length) currentSegmentIndex = 0;
  codeSegments[currentSegmentIndex]();
}

// Start executing the first code segment
codeSegments[currentSegmentIndex]();
